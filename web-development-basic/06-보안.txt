HTTP/HTTPS

HTTP

하이퍼 택스트 트렌스퍼 프로토콜
택스트 => 링크 => 택스트 => 링크 =>택스트 => 링크 =>택스트 => 링크 : 하이퍼 텍스트

택스트는 html...
마크업 랭귀지 xml(?)


HTTPS : HTTP 시큐리티
종단간 암호화

클라이언트 => 서버
데이터를 보낼때 암호화
클라이언트는 HTML 파일 등을 받을 때 서버로 부터 인증서
인증서에는 암호화를 해 주는 공개키

공개키를 통해서 서버에 보내는 데이터를 암호화한다.

리퀘스트 하는 모든 데이터가 암호화 됨
도메인 => 연결해야 하니 알아야 되잖아 => 암호화 안 함
나머지는 다 암호화 한다.


암호화된 리퀘스트가 서버에 도착하면
서버가 가진 비밀키로 디코딩 => 무슨내용인지 안다.


컴퓨터1, 컴퓨터2 - 공유기 - 인터넷 - 서버

컴퓨터1, 컴퓨터2는 같은 공유기를 사용한다.

컴1 보내는 패킷을 컴2가 가로챌 수 있다.

와이어샤크 등의 도구를 사용하면 컴퓨터1에서 공유기로 보내는 데이터를 가로챌 수 있다.

선으로 되어 있으면 안 되겠지만 와이파이로 되어 있다. 가로챌 수 있다.

같은 망의 와이파이는 암호화 방식을 공유하기 때문

HTTPS를 쓰면 전송되는 내용 암호화 패킷을 가로채도 서버의 비밀키를 모르면 해독할 수가 없다.

컴퓨터 - 공유기 - 인터넷 - 프록시 서버 - 서버



프록시

통신 데이터를 다른곳으로 연결해 주는 것

리퀘스트 : 클라이언트 -> 프록시 서버 -> 네이버 서버

프록시 서버 주소로 리퀘스트를 보냈는데 이게 그대로 네이버 서버로 보내진다.


리스폰스 : 클라이언트 <- 프록시 서버 <- 네이버 서버

중간 거치는 서버

프록시 서버 : 공유기, VPN, 네임서버... 등등


컴퓨터 - https - 공유기 - https - 인터넷 - https - 프록시 서버 (비밀키) - http - 서버
(클라우드프론트, 로드벨런서... 내용이 많다 설명하려면)



나머지는 서버 사이드 부분을 하면서 알야가야 하는 것들
