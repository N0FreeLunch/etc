웹 개발

서버
- 백앤드 : 컴퓨터에 데이터를 저장하기 위한 기계어에 까가운 로직 구성
- 데이터 베이스에 저장된 데이터를 잘 가공해서
- 가공된 데이터를 프론트에 뿌려주는 역할을 한다.

클라이언트
- 브라우저
- 정적데이터(한번 받으면 고정되어 있는 것) : HTML, CSS, JS, IMG ...

MVC 모델
유저인터페이스 컴퓨터의 데이터 저장 목적이 다르기 때문에 설계 방향성이 다르다.

- 모델 : 데이터 저장 => 모델
- 뷰 : 유저인터페이스 => 뷰
- 컨트롤러 : 뷰와 모델 사이의 프로토콜

일반적인 MVC : 서버사이드에서 MVC을 말한다. (= 웹어플리케이션의 MVC)
- 디비에서 데이터를 수정 삭제 삽입 하는 로직을 구성하는 것 : 모델 (디비 자체는 아니다. 데이터가 저장된 상태도 아니다.)
- 컨트롤러는 : 라우터, 클라이언트에서 보낸 데이터를 모델이 받아들일 수 있는 프로토콜로 전달
- 뷰 : 프론트의 화면구성하는데, 예전에는 HTML 자체를 만들어서 내 보냈다. 서버에 정적 페이지 저장 (HTML, CSS, JS, IMG을 세팅해 놓고 보내는 역할)

프론트앤드 MVC
- 웹 어플리케이션의 뷰를 떼어 MVC를 만든다.
- 리액트, 뷰, 자바스크립트로 만든 프레임워크 MVC로 해서 쓸 수 있다.
- 예를 들어 자바스크립트로 페이지 구성
- 모델 : 자바스크립트 변수에 값을 저장하는 로직
- 뷰 : 화면에 보여주는 것 (태그의 구조 CSS를 통한 디자인)
- 컨트롤러 : 데이터가 뷰에 보여지는 방식을 정의 한 것
